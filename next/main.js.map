{"version":3,"file":"main.js","mappings":"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","sources":["./apps/ide-ui/src/app/app.component.html","./apps/ide-ui/src/app/app.component.ts","./apps/ide-ui/src/app/app.module.ts","./apps/ide-ui/src/app/layout/layout.module.ts","./apps/ide-ui/src/app/layout/main/main.component.ts","./apps/ide-ui/src/app/layout/main/main.component.html","./apps/ide-ui/src/app/layout/menu/menu.component.ts","./apps/ide-ui/src/app/layout/menu/menu.component.html","./apps/ide-ui/src/app/routes/dev/dev.module.ts","./apps/ide-ui/src/app/routes/dev/list-changes/list-changes.component.ts","./apps/ide-ui/src/app/routes/dev/list-changes/list-changes.component.html","./apps/ide-ui/src/app/routes/editor/editor-element.ts","./apps/ide-ui/src/app/routes/editor/editor.module.ts","./apps/ide-ui/src/app/routes/editor/input-element/input-element.component.ts","./apps/ide-ui/src/app/routes/editor/input-element/input-element.component.html","./apps/ide-ui/src/app/routes/editor/main-editor/main-editor.component.ts","./apps/ide-ui/src/app/routes/editor/main-editor/main-editor.component.html","./apps/ide-ui/src/app/routes/editor/select-element/select-element.component.ts","./apps/ide-ui/src/app/routes/editor/select-element/select-element.component.html","./apps/ide-ui/src/app/routes/editor/sub-text-element/sub-text-element.component.ts","./apps/ide-ui/src/app/routes/editor/sub-text-element/sub-text-element.component.html","./apps/ide-ui/src/app/routes/editor/text-element/text-element.component.ts","./apps/ide-ui/src/app/routes/editor/text-element/text-element.component.html","./apps/ide-ui/src/app/routes/editor/text-handler/text-handler.component.ts","./apps/ide-ui/src/app/routes/editor/text-handler/text-handler.component.html","./apps/ide-ui/src/app/routes/welcome/main/welcome.component.ts","./apps/ide-ui/src/app/routes/welcome/main/welcome.component.html","./apps/ide-ui/src/app/routes/welcome/welcome.module.ts","./apps/ide-ui/src/app/shared/change/change.module.ts","./apps/ide-ui/src/app/shared/change/services/change-listen.service.ts","./apps/ide-ui/src/app/shared/change/services/change-update.service.ts","./apps/ide-ui/src/app/shared/pipes/locale-desc.pipe.ts","./apps/ide-ui/src/app/shared/pipes/locale.pipe.ts","./apps/ide-ui/src/app/shared/pipes/type-of.pipe.ts","./apps/ide-ui/src/app/shared/project/IdeProject.ts","./apps/ide-ui/src/app/shared/project/services/project.service.ts","./apps/ide-ui/src/app/shared/shared.module.ts","./apps/ide-ui/src/app/shared/text/services/locale.service.ts","./apps/ide-ui/src/app/shared/text/services/text.service.ts","./apps/ide-ui/src/app/shared/text/text.module.ts","./apps/ide-ui/src/environments/environment.next.ts","./apps/ide-ui/src/main.ts"],"sourcesContent":["<ide-ui-main *ngIf=\"mainTab()\"><ide-ui-main-editor></ide-ui-main-editor></ide-ui-main>\n<ng-container *ngIf=\"!mainTab()\"><router-outlet></router-outlet></ng-container>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ide-ui-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ide-ui';\n\n  mainTab(): boolean {\n    return window.location.hash.indexOf('/newTabDev')==-1;\n  }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutModule} from './layout/layout.module';\nimport {EditorModule} from './routes/editor/editor.module';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainEditorComponent} from './routes/editor/main-editor/main-editor.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ListChangesComponent} from './routes/dev/list-changes/list-changes.component';\nimport {DevModule} from './routes/dev/dev.module';\nimport {WelcomeModule} from './routes/welcome/welcome.module';\nimport {WelcomeComponent} from \"./routes/welcome/main/welcome.component\";\nimport {BasicModule} from \"@dontcode/plugin-basic\";\nimport {ScreenModule} from \"@dontcode/plugin-screen\";\nimport {FieldsModule} from \"@dontcode/plugin-fields\";\nimport {ConfirmationService} from \"primeng/api\";\nimport { RestModule } from '@dontcode/plugin-rest';\nimport {PluginCommonModule} from \"@dontcode/plugin-common\";\nimport {ReportModule} from \"@dontcode/plugin-report\";\nimport {CommerceModule} from \"@dontcode/plugin-commerce\";\n\nconst appRoutes:Routes = [\n  { path: '', component: WelcomeComponent },\n  {path: 'editor', component: MainEditorComponent},\n  {path: 'welcome', component: WelcomeComponent},\n  {path: 'dev', component: ListChangesComponent},\n  {path: 'newTabDev', component: ListChangesComponent},\n  { path: 'project', loadChildren: () => import('./routes/project/project.module').then(m => m.ProjectModule) }]\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, BrowserAnimationsModule\n    , EditorModule, LayoutModule, DevModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false,useHash:true } // <-- debugging purposes only\n    ),\n  HttpClientModule,\n  WelcomeModule,\n    PluginCommonModule.forRoot()\n    ,BasicModule\n    ,ScreenModule\n    ,FieldsModule\n    ,RestModule\n    ,ReportModule\n    ,CommerceModule\n  ],\n  providers: [ConfirmationService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MainComponent} from './main/main.component';\nimport {RouterModule} from '@angular/router';\nimport {MenuModule} from \"primeng/menu\";\nimport {ButtonModule} from \"primeng/button\";\nimport {ToolbarModule} from \"primeng/toolbar\";\nimport {SidebarModule} from \"primeng/sidebar\";\nimport {MenuComponent} from \"./menu/menu.component\";\nimport {TooltipModule} from \"primeng/tooltip\";\nimport {OverlayPanelModule} from \"primeng/overlaypanel\";\n\n\n@NgModule({\n  declarations: [MainComponent, MenuComponent],\n  exports: [\n    MainComponent\n  ],\n    imports: [\n        CommonModule, RouterModule, SidebarModule, ToolbarModule, ButtonModule, MenuModule, TooltipModule, OverlayPanelModule\n    ]\n})\nexport class LayoutModule { }\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {combineLatest, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {TextService} from '../../shared/text/services/text.service';\nimport {ChangeUpdateService} from \"../../shared/change/services/change-update.service\";\nimport {environment} from \"../../../environments/environment\";\nimport {Change, ChangeType, DontCodeModel, dtcde} from \"@dontcode/core\";\nimport {ProjectService} from \"../../shared/project/services/project.service\";\n\n\n@Component({\n  selector: 'ide-ui-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit{\n  context$: Observable<\n    {\n      status:string,\n      sessionId:string|undefined\n    }>|null = null;\n\n  sidePanelVisible: boolean = true;\n\n  serverUrl = environment.webSocketUrl;\n\n  constructor( protected service:TextService\n              , protected updateService:ChangeUpdateService\n              , protected projectService: ProjectService\n              , protected ref: ChangeDetectorRef\n              ) {\n\n  }\n\n  protected sessionId:string|undefined;\n\n  ngOnInit(): void {\n    this.sidePanelVisible = true;\n\n    this.context$ = combineLatest([this.updateService.getConnectionStatus(), this.updateService.getSessionId()])\n      .pipe(map ((status) => {\n        this.sessionId=status[1];\n        return {status:status[0], sessionId:status[1]};\n      }));\n\n    this.loadSchema();\n    }\n\n  logoClicked() {\n    this.sidePanelVisible=true;\n  }\n\n  sidePanelVisibleChanged($event: any) {\n    //console.log($event);\n    this.sidePanelVisible=$event.target.visible;\n  }\n\n  loadSchema () {\n    this.service.resetSchema();\n    this.service.readSchema(dtcde.getSchemaManager().getSchema());\n//    this.service.readSchemaFormUrl('assets/core/'+DontCode.dtcde.getSchemaUri());\n    this.updateService.pushChange(new Change(ChangeType.RESET, DontCodeModel.ROOT,null));\n    this.projectService.newCurrentProject();\n\n    this.ref.detectChanges();\n  }\n\n  openDevUrl() {\n    window.open('#/newTabDev', '_blank');\n  }\n\n  openPreview() {\n    if( this.sessionId==null) {\n      window.open(environment.previewUrl, '_blank');\n    }else {\n      window.open(environment.previewUrl+'?sessionId='+this.sessionId, '_blank');\n    }\n  }\n\n  connectedClass(ctx: { status: string }): string {\n    if( ctx.status!==\"connected\") {\n      return \"p-button-danger\";\n    }\n    return '';\n  }\n\n\n\n}\n","<div *ngIf=\"(context$ | async) as ctx\">\n  <p-toolbar id=\"mainToolbar\">\n    <div class=\"p-toolbar-group-left\">\n      <img src=\"./assets/images/logo.png\" width=\"119\" height=\"66\"/>\n      <button pButton type=\"button\" class=\"md:hidden p-button-rounded p-button-outlined\" icon=\"pi pi-bars\" (click)=\"sidePanelVisible=!sidePanelVisible\"></button>\n    </div>\n   <h1>Dont-code Builder</h1>\n    <div class=\"p-toolbar-group-right\">\n      <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" icon=\"pi pi-cloud-download\" pTooltip=\"New Application\" (click)=\"loadSchema()\"></button>\n      <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" icon=\"pi pi-book\" pTooltip=\"Open Debugging Window\" (click)=\"openDevUrl()\"></button>\n      <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" [ngClass]=\"connectedClass(ctx)\" icon=\"pi pi-external-link\" pTooltip=\"Open Previewer\" (click)=\"openPreview()\"></button>\n      <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" [ngClass]=\"connectedClass(ctx)\" icon=\"pi pi-sort\"  (mouseenter)=\"op.show($event)\"></button>\n      <p-overlayPanel #op [showCloseIcon]=\"false\" [style]=\"{width: '500px'}\">\n        <ng-template pTemplate>\n          <div class=\"grid\">\n            <div class=\"col-2\">Server:</div>\n            <div class=\"col-10\">{{serverUrl}}</div>\n            <div class=\"col-2\">Session:</div>\n            <div class=\"col-10\">{{ctx.sessionId}}</div>\n          </div>\n        </ng-template>\n      </p-overlayPanel>\n    </div>\n  </p-toolbar>\n  <div class=\"md:hidden\">\n    <p-sidebar id=\"mainSidePanel\" [style]=\"{width:'15em'}\" [(visible)]=\"sidePanelVisible\" [modal]=\"false\" [closeOnEscape]=\"true\" [showCloseIcon]=\"true\">\n      <img src=\"./assets/images/logo.png\" width=\"119\" height=\"66\"/>\n      <ide-ui-menu></ide-ui-menu>\n    </p-sidebar>\n  </div>\n  <div class=\"grid\">\n    <div class=\"col hidden md:block md:col-2\">\n      <ide-ui-menu id=\"mainMenu\"></ide-ui-menu>\n    </div>\n    <div class=\"col md:col-10\">\n      <router-outlet> </router-outlet>\n    </div>\n  </div>\n\n</div>\n","import {ChangeDetectionStrategy, Component} from \"@angular/core\";\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: 'ide-ui-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MenuComponent {\n\n  menuItems =new Array<MenuItem> (\n    {label:'Main Menu', items:[\n        {label:'Welcome', icon:'pi pi-home', routerLink:['/welcome']},\n        {label:'Projects', icon:'pi pi-home', routerLink:['/project']},\n        {label:'Editor', icon:'pi pi-pencil', routerLink:['/editor']},\n      ]},\n    {label:'Debug Menu', items:[\n        {label:'Dev', icon:'pi pi-book', routerLink: ['/dev']}\n      ]}\n  );\n\n}\n\n","<p-menu [model]=\"menuItems\"></p-menu>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ListChangesComponent} from './list-changes/list-changes.component';\nimport {TableModule} from \"primeng/table\";\n\n\n@NgModule({\n  declarations: [ListChangesComponent],\n    imports: [\n        CommonModule,\n        TableModule\n    ]\n})\nexport class DevModule { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { Change, ChangeType } from '@dontcode/core';\nimport { ChangeListenService } from '../../../shared/change/services/change-listen.service';\n\n@Component({\n  selector: 'ide-ui-list-changes',\n  templateUrl: './list-changes.component.html',\n  styleUrls: ['./list-changes.component.css'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class ListChangesComponent implements OnInit {\n\n  // context$: Observable<any>;\n\n  @Input()\n  title: string='List of Changes';\n\n  listOfChanges:Change[]=new Array();\n\n  constructor(protected changeService:ChangeListenService,\n              private ref: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n    this.listOfChanges=this.changeService.getListOfChanges();\n    this.changeService.getChangeEvents ().subscribe(value => {\n//      console.log(\"newVal\", value);\n      if (value.type===ChangeType.RESET) {\n        this.listOfChanges=this.changeService.getListOfChanges();\n      }\n        //We have to force refresh when displayed in another tab\n      this.ref.detectChanges();\n    });\n  }\n\n/*  newInit (): void {\n    this.listOfChanges=this.changeService.getListOfChanges();\n    this.context$ = combineLatest([this.changeService.getChangeEvents()])\n      .pipe(map ((change) => {\n        console.log(\"Updating...\");\n        this.ref.detectChanges();\n        return {change};\n      }));\n\n  }*/\n}\n","<h1>{{title}}</h1>\n\n<p-table [value]=\"listOfChanges\" [resizableColumns]=\"true\" styleClass=\"p-datatable-gridlines\">\n  <ng-template pTemplate=\"header\">\n    <tr>\n      <th pResizableColumn>Type</th>\n      <th pResizableColumn>Position</th>\n      <th pResizableColumn>Value</th>\n    </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-change>\n    <tr>\n      <td>{{change.type}}</td>\n      <td>{{change.position}}</td>\n      <td>{{change.value | json}}</td>\n    </tr>\n  </ng-template>\n</p-table>\n","import {\n  AbstractSchemaItem,\n  DontCodeModelManager,\n  DontCodeSchemaEnum,\n  DontCodeSchemaItem,\n  DontCodeSchemaProperty,\n  DontCodeSchemaRef,\n  dtcde\n} from \"@dontcode/core\";\n\n\nexport class EditorElement {\n\n  id: string;\n  type: EditorElementType;\n  /**\n   * The position of this element in the hierarchy of elements\n   */\n  position: string;\n  /**\n   * The list of possible values (for a select box)\n   */\n  values: any[]|null=null;\n  /**\n   * The position of this element in the DontCode schema\n   */\n  schemaPosition: string;\n  /**\n   * The Schema model item represented by this element\n   */\n  schemaModel: DontCodeSchemaItem;\n\n  protected editedValue: any;\n\n  protected childrenToDisplay = new Array<EditorElement>();\n  protected allChildren = new Map<string, EditorElement> ();\n  protected forceRead = true;\n\n  protected parent: EditorElement|null=null;\n\n  /** An array of item carry the same schemamodel than the item itself, we use this to distinguish between the 2 modes\n   *\n   * @protected\n   */\n  protected asArray = false;\n\n  constructor(id:string, schemaItem:DontCodeSchemaItem, position:string, schemaPosition:string, type:EditorElementType) {\n    this.id = id;\n    this.schemaModel = schemaItem;\n    this.position=position;\n    this.schemaPosition=schemaPosition;\n\n    /**\n     * The id may not contains / as it is forbidden by html\n     */\n    if( this.id)\n      this.id=this.id.split('/').join('-');\n    this.type=type;\n  }\n\n  static createNew (position:string, schemaPosition:string, type:EditorElementType, schemaItem:DontCodeSchemaItem, listValues?:any[], initialValue?:any, asArray?:boolean) {\n    const ret = new EditorElement(position, schemaItem, position, schemaPosition, type);\n    if (listValues) {\n      ret.values=listValues;\n    }\n    if (initialValue) {\n        // Dont call setEditedValue as it would try to recalculate children\n      ret.editedValue=initialValue;\n    }\n\n    if( asArray) ret.asArray=asArray;\n    return ret;\n  }\n\n  getParent (): EditorElement|null {\n    return this.parent;\n  }\n\n  setParent (newParent:EditorElement ) {\n    this.parent = newParent;\n  }\n\n  isAsArray (): boolean {\n    return this.asArray;\n  }\n\n  isHidden (): boolean {\n    return DontCodeModelManager.isHidden (this.editedValue);\n  }\n\n  isReadonly (): boolean {\n    return DontCodeModelManager.isReadonly (this.editedValue);\n  }\n\n  /**\n   * Returns the item id of the DontCodeSchemaItem managed by this editor element if it's part of an array\n   */\n  getItemIdIfExists (): string|null {\n    if( (this.parent) && (this.parent.type===EditorElementType.array)) {\n      return this.position.substring(this.position.lastIndexOf('/') + 1);\n    }\n    return null;\n  }\n\n  getChildrenToDisplay (): Array<EditorElement> {\n    if (this.forceRead) {\n      this.childrenToDisplay.length=0;\n/*      let added=false;\n      if (this.type===EditorElementType.array) {\n        if (this.editedValue) {\n          for (const item in this.editedValue) {\n            if (this.editedValue.hasOwnProperty(item)) {\n              this.readSubSchema(this.position, this.schemaPosition, this.schemaModel, item, this.editedValue[item]);\n              added=true;\n            }\n          }\n        }\n      }\n      if(!added) {*/\n        this.readSubSchema(this.position, this.schemaPosition, this.schemaModel,undefined, this.editedValue );\n        if (this.schemaModel.isObject() || this.schemaModel.isArray())  // Object's value are stored in the children hierarchy, so we remove it from parent\n          this.editedValue=undefined;\n//      }\n      this.forceRead = false;\n    }\n    return this.childrenToDisplay;\n  }\n\n\n  /**\n   * Reads a DontCodeSchemaItem schema. Either is merges with current EditorElement\n   * @param position\n   * @param schemaPosition\n   * @param model\n   */\n  readSubSchema ( position:string, schemaPosition:string, model:DontCodeSchemaItem, mergeStartPosition?:number, values?:any): Array<EditorElement> {\n    const ret = this.childrenToDisplay;\n    let mergePosition = mergeStartPosition ? mergeStartPosition : 0;\n    const cache = this.allChildren;\n\n    const parent = model;\n    const children = new Array();\n    let initialValue = values;\n\n    if (this.asArray) {\n        // Makes sure subItems are created from the initialValues sent, if any\n        for (const itemKey in initialValue) {\n          if (initialValue.hasOwnProperty(itemKey)) {\n            children.push([itemKey, parent]);\n          }\n      }\n      if (children.length === 0) {// No initial items, so create a new empty one\n        children.push([this.getNextId(), parent]);\n      }\n    } else {\n      // Make sure all subproperties are considered\n        for (const childModel of parent.getChildren()) {\n          const propKey = childModel[0];\n          children.push([propKey, childModel[1]]);\n        }\n    }\n\n        // resolve schemareference of all children\n    children.forEach(value => {\n      if (value[1] instanceof DontCodeSchemaRef) {\n        if( !value[1].isArray() || parent === value[1]) // Only resolve ref if we are not creating the array element\n          value[1]=this.resolveRefs(value[1]);\n      }\n    });\n\n    for (const [propName, child] of children) {\n      let childPosition = position;\n      let schemaChildPosition = schemaPosition;\n      initialValue = values;\n        // Are we reading a subProperty ?\n      if (propName && propName.length>0) {\n        childPosition = childPosition + '/' + propName;\n        if( !this.asArray)\n          schemaChildPosition = schemaChildPosition + '/'+ propName;\n        if( initialValue)\n          initialValue = initialValue[propName];\n      }\n\n      let newElement:EditorElement|undefined = cache.get(propName);\n      if (!newElement) {\n        if (child.isArray() && (child!==parent) ) {\n          // A model can be an array and an object or value at the same time.\n          newElement = EditorElement.createNew(\n            childPosition, schemaChildPosition, EditorElementType.array, child, undefined, initialValue, true);\n        } else if (child.isValue()) {\n          newElement = EditorElement.createNew(\n            childPosition, schemaChildPosition, EditorElementType.input, child, undefined, initialValue);\n        } else if (child.isEnum()) {\n          const asEnum = child as DontCodeSchemaEnum;\n          newElement = EditorElement.createNew(\n            childPosition, schemaChildPosition, EditorElementType.list, child, asEnum.getValues(), initialValue);\n        } else if (child.isObject()) {\n          newElement = EditorElement.createNew(\n            childPosition, schemaChildPosition, EditorElementType.object, child, undefined, initialValue, false);\n        } /*else if (child.isReference()) {\n          this.readSubSchema(childPosition, schemaChildPosition, child, true, mergePosition, initialValue);\n        }*/ else {\n          console.error('Unknown item read from schema at position ' + position + ':', child);\n        }\n      } else if (initialValue!==undefined) {\n        newElement.setEditedValue(initialValue);\n      }\n\n      if (newElement) {\n        newElement.parent=this;\n        mergePosition = this.mergeElement(newElement, child, propName,mergePosition);\n        if (newElement.hasActiveProperties()) {\n          const toAddProps = newElement.getActiveProperties();\n          if (toAddProps) {\n              // We have to add a dynamic property, so let's create it with a possible value\n            let propValue = toAddProps.getRelativeId();\n            if ((values!=null)&&(propValue!=null)) {\n              propValue = values[propValue];\n            }else\n              propValue=undefined;\n            this.readSubSchema(position, schemaPosition, toAddProps, mergePosition, values);\n            // if the active properties are replacing the remaining elements, then remove the remaining elements and  just stop the loop here\n            if (newElement.isReplacementActive()) {\n              break;\n            }\n          }\n        }\n      }\n    }\n    return ret;\n  }\n\n  resolveRefs (entity: DontCodeSchemaItem): DontCodeSchemaItem {\n    let ret = entity;\n    if( entity.isReference()) {\n      const toFind = (entity as DontCodeSchemaRef).getReference();\n      const found= AbstractSchemaItem.goto(this.calculateRootSchema(),toFind);\n      if (found) ret=found;\n    }\n    return ret;\n  }\n\n  calculateRootSchema (): DontCodeSchemaItem {\n    let ret:DontCodeSchemaItem = this.schemaModel;\n    while (ret.getParent()) {\n      const parent =ret.getParent();\n      if (parent) ret = parent;\n    }\n    return ret;\n  }\n\n  getNextId() {\n    const childrenKeys = new Set<string>(this.allChildren.keys());\n    return DontCodeModelManager.generateNextKey(childrenKeys);\n  }\n\n  /**\n   * Creates a new sub element of an array. Usually called when the user clicks Add\n   * @param element\n   */\n  addSubElement() {\n    /**\n     * Creates the new element and adds it to the list\n     */\n    this.readSubSchema(this.position, this.schemaPosition, this.schemaModel);\n  }\n\n  removeElement( item:EditorElement, index?:number): EditorElement {\n    const parentList = this.getChildrenToDisplay();\n    if( !index){\n      index = parentList.indexOf(item);\n    }\n    const ret = parentList.splice(index,1)[0];\n    return ret;\n  }\n\n  /**\n   * Moves the item up one place and returns the immediate following item.\n   * or returns null if nothing have been moved\n   * @param item\n   * @param index\n   */\n  upElement( item: EditorElement, index: number): EditorElement|null {\n    const parentList = this.getChildrenToDisplay();\n    if( !index){\n      index = parentList.indexOf(item);\n    }\n\n    if (index>0) {\n      parentList.splice(index, 1);\n      parentList.splice(index-1,0,item);\n    } else {\n      return null;\n    }\n\n    return parentList[index];\n  }\n\n  /**\n   * Moves the item down and returns the next item if possible.\n   * Returns null if the item was already the last element (no move possible)\n   * or undefined if the moved item becomes the last element\n   * @param item\n   * @param index\n   */\n  downElement(item: EditorElement, index: number): EditorElement|null|undefined {\n    const parentList = this.getChildrenToDisplay();\n    if( !index){\n      index = parentList.indexOf(item);\n    }\n    if (index<parentList.length-1) {\n      parentList.splice(index, 1);\n      parentList.splice(index+1,0,item);\n    } else {\n      return null;\n    }\n\n    if ((index+1) === parentList.length-1) {\n      // Item becomes the last element, so no-one is after him\n      return undefined;\n    } else\n      return parentList[index+2];\n  }\n\n  getEditedValue (): any {\n    return this.editedValue;\n  }\n\n  setEditedValue (newVal:any): boolean {\n    const oldValue = this.editedValue;\n    this.editedValue = newVal;\n    const props = this.schemaModel.getProperties(this.editedValue);\n    if (props || (oldValue && (this.schemaModel.getProperties(oldValue)))) {\n      // The children properties have changed\n      //this.parent.mergeDisplayChildren(this, props);\n      if( this.parent)\n        this.parent.forceRead=true;\n      return true;\n    } else if ((this.schemaModel.isArray()) || (this.schemaModel.isObject())) {\n        // Remove all array items that are no more in values\n      for (const oldProp of this.allChildren.keys()) {\n        if( (!this.editedValue) || (this.editedValue[oldProp]===undefined)) {\n          this.allChildren.delete(oldProp);\n        }\n      }\n      this.forceRead=true;\n    }\n    return false;\n  }\n\n  protected hasActiveProperties(): boolean {\n    const props = this.schemaModel.getProperties(this.editedValue);\n    if (props)\n      return true;\n    else\n      return false;\n  }\n\n  protected getActiveProperties(): DontCodeSchemaProperty|undefined {\n    return this.schemaModel.getProperties(this.editedValue);\n  }\n\n  protected isReplacementActive(): boolean {\n    const props = this.schemaModel.getProperties(this.editedValue);\n    if (props && props.isReplace())\n      return true;\n    else\n      return false;\n  }\n\n  protected mergeElement(newElement: EditorElement, after:DontCodeSchemaItem, propName:string, mergeStartPosition: number): number {\n    const list= this.childrenToDisplay;\n    const cache = this.allChildren;\n    const key = propName??newElement.schemaModel.getRelativeId();\n    // If the element was already present, do nothing\n    if (cache.get(key)===newElement) {\n      // Returns its position\n      for (let i=0;i<list.length;i++) {\n        if (list[i]===newElement)\n          return i;\n      }\n    } else if (cache.get(key)!=null) {\n      console.error ('Setting 2 differents elements with the same property name: '+key+' for the element '+this.position);\n      throw new Error ('Setting 2 differents elements with the same property name: '+key+' for the element '+this.position);\n    }\n\n    cache.set(key, newElement);\n    if (mergeStartPosition>=list.length){\n      list.push(newElement);\n      return ++mergeStartPosition;\n    }\n\n    let foundAt=-1;\n    let alreadyThere=false;\n    for (let i=mergeStartPosition;i<list.length;i++) {\n      if (list[i].schemaModel===after) {\n        foundAt=i;\n      } else {\n        if (foundAt !== -1) {\n          // We found the insertion point, should we delete older elements or is the element already present in the list ?\n          if (list[i]===newElement) {\n            // It was already in the list !\n            alreadyThere = true;\n          }\n          break;\n        }\n      }\n    }\n\n    if (foundAt !== -1)\n      mergeStartPosition=foundAt+1;\n\n    if(!alreadyThere)\n      list.splice(mergeStartPosition, 0, newElement);\n    return mergeStartPosition;\n  }\n\n  getChild (propName:string) {\n    if (this.forceRead)\n      this.getChildrenToDisplay();\n    return this.allChildren.get(propName);\n  }\n\n  /**\n   * Retrieve the child in the hierarchy at the specified subposition.\n   * For example getChildInHierarchy ('sub/item/name') will return the name of the item who is child of sub child of the element\n   * getChildInHierarchy ('sub/table/ab/type') will return the type of the element ab of the array named table of sub child\n   * @param beforeAName\n   */\n  getChildInHierarchy(beforeAName: string): EditorElement|null {\n    const propNames=beforeAName.split('/');\n    let current:EditorElement|undefined = this;\n    //let nextIsArray= false;\n    //let arrayProp:string=null;\n    for (const propName of propNames) {\n      if( propName!==\"\") {\n        /*if( nextIsArray) {\n          current = this.getChildrenToDisplay().find(value => {\n            if (value.position.endsWith(arrayProp+'/'+propName))\n              return true;\n          });\n          arrayProp=null;\n          nextIsArray=false;\n        } else if( this.schemaModel.getChild(propName)?.isArray()) {\n          nextIsArray=true;\n          arrayProp = propName;\n        } else {*/\n        current = current.getChild(propName);\n   //     }\n        if(!current) {\n          return null;\n        }\n      }\n    }\n    return current;\n  }\n}\n\nexport enum EditorElementType {\n  array='array',\n  object='object',\n  newLine='newLine',\n  input='input',\n  list='list',\n  label='label'\n}\nenum ArrayAction {\n  DEFAULT,\n  NEW_ITEM=1,\n  ONLY_ITEM\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MainEditorComponent} from './main-editor/main-editor.component';\nimport {TextHandlerComponent} from './text-handler/text-handler.component';\nimport {TextElementComponent} from './text-element/text-element.component';\nimport {SelectElementComponent} from './select-element/select-element.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {InputElementComponent} from './input-element/input-element.component';\nimport {SubTextElementComponent} from './sub-text-element/sub-text-element.component';\nimport {AccordionModule} from \"primeng/accordion\";\nimport {ButtonModule} from \"primeng/button\";\nimport {DropdownModule} from \"primeng/dropdown\";\nimport {InputTextModule} from \"primeng/inputtext\";\nimport {FormsModule} from \"@angular/forms\";\nimport {AutoCompleteModule} from \"primeng/autocomplete\";\n\n\n@NgModule({\n  declarations: [MainEditorComponent, TextHandlerComponent, TextElementComponent, SelectElementComponent, InputElementComponent, SubTextElementComponent],\n  exports: [\n    MainEditorComponent\n  ],\n    imports: [\n        CommonModule,\n        SharedModule,\n        AccordionModule,\n        ButtonModule,\n        DropdownModule,\n        InputTextModule,\n        FormsModule,\n        AutoCompleteModule\n    ]\n})\nexport class EditorModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { EditorElement } from '../editor-element';\nimport { ChangeUpdateService } from '../../../shared/change/services/change-update.service';\nimport { Change, ChangeType } from '@dontcode/core';\n\n@Component({\n  selector: 'ide-ui-input-element',\n  templateUrl: './input-element.component.html',\n  styleUrls: ['./input-element.component.css']\n})\nexport class InputElementComponent implements OnInit {\n  @Input()\n  element!: EditorElement;\n\n  constructor(protected changeService:ChangeUpdateService) { }\n\n  ngOnInit(): void {\n  }\n\n  onChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n\n    this.element.setEditedValue(target.value);\n    this.changeService.pushChange(\n      new Change(ChangeType.UPDATE,\n        this.element.position,\n        target.value));\n  }\n\n  editedValue() {\n    if (this.element.getEditedValue())\n      return this.element.getEditedValue();\n    else\n      return '';\n  }\n}\n","<span class=\"displayable\">{{(element.schemaPosition | locale)}}</span>\n<input pInputText [id]=\"element.id\" [name]=\"element.id\" (change)=\"onChange($event)\" [readonly]=\"element.isReadonly()\" [value]=\"editedValue()\">\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ChangeListenService } from \"../../../shared/change/services/change-listen.service\";\nimport { TextService } from \"../../../shared/text/services/text.service\";\nimport { EditorElement } from \"../editor-element\";\nimport {Subject, Subscription} from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { ChangeType, DontCodeModel } from \"@dontcode/core\";\n\n@Component({\n  selector: 'ide-ui-main-editor',\n  templateUrl: './main-editor.component.html',\n  styleUrls: ['./main-editor.component.css'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class MainEditorComponent implements OnInit, OnDestroy {\n\n  rootElement:EditorElement|null=null;\n\n  unsubscriber = new Subscription();\n\n  constructor(protected ref:ChangeDetectorRef, protected changeListener: ChangeListenService, public textService:TextService) {\n    // Make sure the dev change listener is already started and listening\n\n  }\n\n  ngOnInit(): void {\n    this.unsubscriber.add(this.changeListener.getChangeEvents()\n      .subscribe(change => {\n        if (change.type===ChangeType.RESET) {\n          if( change.position===DontCodeModel.ROOT || change.position===\"\") {\n            this.rootElement = this.textService.getRootElement();\n            this.rootElement.setEditedValue(change.value?.creation);\n//            console.log('Reset received');\n            this.ref.markForCheck();\n            this.ref.detectChanges();\n          }\n        }\n      })\n    );\n    this.rootElement = this.textService.getRootElement();\n  }\n\n  ngOnDestroy(): void {\n    // unsubscribe to all observables\n    this.unsubscriber.unsubscribe();\n  }\n\n}\n","<ide-ui-text-handler *ngIf=\"rootElement\" [element]=\"rootElement\"></ide-ui-text-handler>\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {EditorElement} from '../editor-element';\nimport {ChangeUpdateService} from '../../../shared/change/services/change-update.service';\nimport {Change, ChangeType, DontCodeSchemaEnumValue} from '@dontcode/core';\n\n@Component({\n  selector: 'ide-ui-select-element',\n  templateUrl: './select-element.component.html',\n  styleUrls: ['./select-element.component.css']\n})\nexport class SelectElementComponent implements OnInit {\n\n  @Input()\n  element!: EditorElement;\n\n  @Output()\n  refresh = new EventEmitter<string>();\n\n  filteredElements:any[]=new Array();\n\n  constructor(protected changeService:ChangeUpdateService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  calculateOptionValue(option: string): string {\n    return option;\n  }\n\n  editedValue() {\n    if (this.element.getEditedValue())\n      return this.element.getEditedValue();\n    else\n      return '';\n  }\n\n  onChange(change:any) {\n    //console.log('Selection change', change);\n    let value = change;\n    if( typeof change !== 'string') {\n      value = change.target.value;\n    }\n    const changed:boolean = this.element.setEditedValue(value);\n\n    this.changeService.pushChange(\n      new Change(ChangeType.UPDATE,\n        this.element.position,\n        value));\n\n    if(changed) {\n      this.refresh.emit('refresh');\n    }\n  }\n\n  filterGroupedElements(event:any) {\n    const filteredGroups = [];\n    const defaultGroup:{label:string, items:Array<any>|null} = {\n      label: 'Standard',\n      items: null\n    }\n\n      // If there is only one selection left, then selects it\n    let selectItem:DontCodeSchemaEnumValue|null = null;\n    let selectedCount = 0;\n\n    event.query = event.query?.toLowerCase();\n\n    for (const optgroup of this.element.values as Array<DontCodeSchemaEnumValue>) {\n      if( !(optgroup.getChildren()) || (optgroup.getChildren().length===0)) {\n        if( optgroup.getLabel().toLowerCase().indexOf(event.query) >= 0) {\n          if (defaultGroup.items === null) {\n            defaultGroup.items = new Array();\n            filteredGroups.push(defaultGroup);\n          }\n          defaultGroup.items.push (optgroup.getLabel());\n          if((event.query?.length === optgroup.getLabel().length)) {\n            selectedCount++;\n            selectItem = optgroup;\n            }\n        }\n      } else {\n        const items = optgroup.getChildren().filter (value => value.getLabel().toLowerCase().indexOf(event.query) >=0);\n        if( items.length>0) {\n          selectedCount += items.length;\n          selectItem = items[0];\n          filteredGroups.push({\n            label: optgroup.getLabel(),\n            value: optgroup.getValue(),\n            items: items.map(value => value.getLabel())\n          });\n        }\n      }\n    }\n\n    this.filteredElements = filteredGroups;\n    if ((selectedCount===1)&&(selectItem)) {\n      if (selectItem.getLabel().length===event.query?.length) {\n        this.onChange({target: {value:selectItem.getLabel()}});\n      }\n    }\n  }\n}\n","<span class=\"displayable\">{{(element.schemaPosition | locale)}}</span>\n<p-autoComplete class=\"displayable\" [ngModel]=\"editedValue()\" [group]=\"true\" [id]=\"element.id\" [suggestions]=\"filteredElements\" (completeMethod)=\"filterGroupedElements($event)\"\n                (onSelect)=\"onChange($event)\" [dropdown]=\"true\" [readonly]=\"element.isReadonly()\">\n  <ng-template let-group pTemplate=\"group\">\n    <div class=\"p-d-flex p-ai-center\">\n      <span>{{group.label}}</span>\n    </div>\n  </ng-template>\n  <ng-template let-option pTemplate=\"item\">\n    {{(option | locale)}}\n  </ng-template>\n</p-autoComplete>\n<!-- p-dropdown class=\"displayable\" [id]=\"element.id\" [options]=\"element.values\" (onChange)=\"onChange($event)\" [ngModel]=\"element?.getEditedValue()\">\n  <ng-template let-option pTemplate=\"item\">\n    {{(option | locale)}}\n  </ng-template>\n</p-dropdown -->\n\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\nimport { EditorElement } from \"../editor-element\";\nimport { ChangeUpdateService } from \"../../../shared/change/services/change-update.service\";\nimport { Change, ChangeType } from \"@dontcode/core\";\n\n@Component({\n  selector: 'ide-ui-sub-text-element',\n  templateUrl: './sub-text-element.component.html',\n  styleUrls: ['./sub-text-element.component.css']\n})\nexport class SubTextElementComponent implements OnInit, OnChanges {\n  @Input()\n  element!: EditorElement;\n\n  items: EditorElement[]=new Array();\n  constructor(protected changeService:ChangeUpdateService) { }\n\n  ngOnInit(): void {\n  }\n\n  addElement() {\n    this.element.addSubElement();\n  }\n\n  removeElement(item:EditorElement, index:number) {\n    const removed = this.element.removeElement( item, index);\n    this.changeService.pushChange(\n      new Change(ChangeType.DELETE,\n        removed.position, null));\n  }\n\n  /**\n   * Moves the item up one place and returns the immediately following item, if there is one.\n   * or returns null if nothing have been moved\n   * @param item\n   * @param index\n   */\n  upElement(item:EditorElement, index:number) {\n    const oldPos = item.position; // The old position is the same as the new one in this case (only the beforeId changes)\n    const nextElement = this.element.upElement( item, index);\n    if( nextElement !== null) {\n      const nextKey= nextElement.getItemIdIfExists();\n\n      this.changeService.pushChange(\n        new Change(ChangeType.MOVE, item.position, item.getEditedValue(),undefined, nextKey?nextKey as string:undefined, oldPos)\n      );\n    }\n  }\n  downElement(item:EditorElement, index:number) {\n    const oldPos = item.position; // The old position is the same as the new one in this case (only the beforeId changes)\n    const nextElement = this.element.downElement( item, index);\n    if( nextElement!==null) {\n      let nextKey;\n      if( nextElement===undefined) {  // It is the last element\n        nextKey = undefined;\n      } else {\n        nextKey=nextElement.getItemIdIfExists();\n      }\n      this.changeService.pushChange(\n          new Change(ChangeType.MOVE, item.position, item.getEditedValue(),undefined, nextKey?nextKey as string:undefined, oldPos)\n        );\n\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.items = this.element.getChildrenToDisplay();\n  }\n}\n","<span class=\"displayable\" >{{(element.schemaPosition | locale)}}</span>\n<p-accordion>\n  <p-accordionTab [selected]=\"true\">\n    <ng-template pTemplate=\"header\"><span class=\"displayable\" [id]=\"element.id\">{{(element.schemaPosition | localeDesc)}}</span></ng-template>\n    <ng-template pTemplate=\"content\">  <div style=\"padding-left: 10px\">\n      <ng-container *ngFor=\"let item of items; index as i\">\n        <ng-container *ngIf=\"!item.isHidden()\">\n          <ide-ui-text-handler [element]=\"item\"></ide-ui-text-handler>\n          <ng-container>\n            <button pButton type=\"button\" class=\"p-button-secondary p-button-rounded p-button-outlined\" [id]=\"item.id+'-add-button'\" icon=\"pi pi-plus\" aria-label=\"Add item\" (click)=\"addElement()\">\n            </button>\n            <button pButton type=\"button\" class=\"p-button-danger p-button-rounded p-button-outlined\" [id]=\"item.id+'-remove-button'\" icon=\"pi pi-minus\" aria-label=\"Remove item\" (click)=\"removeElement(item, i)\">\n            </button>\n            <button *ngIf=\"i>0\" pButton type=\"button\" class=\"p-button-secondary p-button-rounded p-button-outlined\" [id]=\"item.id+'-up-button'\" icon=\"pi pi-caret-up\" aria-label=\"Up\" (click)=\"upElement(item, i)\">\n            </button>\n            <button *ngIf=\"i<items.length-1\" pButton type=\"button\" [id]=\"item.id+'-down-button'\" class=\"p-button-secondary p-button-rounded p-button-outlined\"  icon=\"pi pi-caret-down\" aria-label=\"Down\" (click)=\"downElement(item, i)\">\n            </button>\n            <br />\n          </ng-container>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"items.length==0\">\n        <button pButton type=\"button\" class=\"p-button-secondary p-button-rounded p-button-outlined\" [id]=\"element.id+'-new-button'\" icon=\"pi pi-plus\" aria-label=\"Add item\" (click)=\"addElement()\">\n        </button>\n      </ng-container>\n    </div>\n    </ng-template>\n  </p-accordionTab>\n</p-accordion>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { EditorElement } from '../editor-element';\n\n@Component({\n  selector: 'ide-ui-text-element',\n  templateUrl: './text-element.component.html',\n  styleUrls: ['./text-element.component.css']\n})\nexport class TextElementComponent implements OnInit {\n  @Input()\n  element!: EditorElement;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span class=\"displayable\" [id]=\"element.id\">{{(element.schemaPosition | locale)}}</span>\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\nimport { TextService } from '../../../shared/text/services/text.service';\nimport { EditorElement } from '../editor-element';\n\n@Component({\n  selector: 'ide-ui-text-handler',\n  templateUrl: './text-handler.component.html',\n  styleUrls: ['./text-handler.component.css']\n})\nexport class TextHandlerComponent implements OnInit, OnChanges {\n\n  @Input()\n  element!:EditorElement;\n\n  listOfElements:EditorElement[] = [];\n\n  constructor(protected model: TextService, protected ref:ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n//    console.log(\"text Changed\");\n    this.listOfElements = this.element.getChildrenToDisplay();\n  }\n\n  refresh() {\n    this.listOfElements = this.element.getChildrenToDisplay();\n    this.ref.detectChanges();\n  }\n}\n","<ng-container>\n  <ng-container *ngFor=\"let element of listOfElements\">\n    <ng-container *ngIf=\"!element.isHidden()\">\n      <ng-container [ngSwitch]=\"element.type\">\n        <br *ngSwitchCase=\"'newLine'\"/>\n        <ide-ui-text-element *ngSwitchCase=\"'string'\" [element]=\"element\"></ide-ui-text-element>\n        <ng-container *ngSwitchCase=\"'object'\">\n          <div><span class=\"displayable\" >{{(element.schemaPosition | locale)}}</span>\n            <ide-ui-text-handler  [element]=\"element\">\n            </ide-ui-text-handler>\n          </div>\n          <br />\n        </ng-container>\n        <ide-ui-sub-text-element *ngSwitchCase=\"'array'\" [element]=\"element\">\n        </ide-ui-sub-text-element>\n        <ide-ui-select-element *ngSwitchCase=\"'list'\" [element]=\"element\" (refresh)=\"refresh()\"></ide-ui-select-element>\n        <ide-ui-input-element *ngSwitchCase=\"'input'\" [element]=\"element\"></ide-ui-input-element>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ide-ui-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Welcome to Dont-code !</h2>\n<p>You are running the Builder application of the Dont-code platform.</p>\n<p>Use this tool to create new applications or load and edit their behaviors.</p>\n<div class=\"grid align-items-stretch\">\n<div class=\"welcome-question col-12\">\n  <h2>Tutorials</h2>\n</div>\n<div class=\"col-12 md:col-6\">\n  <p-card header=\"Show me a demo\" subheader=\"The fastest way to see the Dont-code platform in action is to load an existing project.\">\n    <div class=\"welcome-item\"><p-badge value=\"1\"></p-badge> Open the Previewer by clicking on <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" icon=\"pi pi-external-link\"></button> on the top bar.</div>\n    <div class=\"welcome-item\"><p-badge value=\"2\"></p-badge> Then select the menu <i class=\"pi pi-home\" style=\"font-size: 1.1rem\">&nbsp;Projects</i> on the side bar.</div>\n    <div class=\"welcome-item\"><p-badge value=\"3\"></p-badge> Load the Task Manager project <p-button icon=\"pi pi-play\" label=\"Play\"></p-button></div>\n    <div class=\"welcome-item\"><p-badge value=\"4\"></p-badge> Edit some elements in the <i class=\"pi pi-pencil\" style=\"font-size: 1.1rem\">&nbsp;Editor</i></div>\n    <div class=\"welcome-item\"><p-badge value=\"5\"></p-badge> And watch the Previewer acting accordingly <img src=\"assets/images/preview-ui-tab.png\" /></div>\n  </p-card>\n</div>\n<div class=\"col-12 md:col-6\">\n  <p-card header=\"Start from scratch\" subheader=\"Gets more insights by working from a blank project\">\n    <div class=\"welcome-item\"><p-badge value=\"1\"></p-badge> Open the Previewer by clicking on <button pButton type=\"button\" class=\"p-button-rounded p-button-outlined\" icon=\"pi pi-external-link\"></button> on the top bar.</div>\n    <div class=\"welcome-item\"><p-badge value=\"2\"></p-badge> Then Create a new application by clicking on <i class=\"pi pi-download\" style=\"font-size: 1.1rem\">&nbsp;New Application</i> icon.</div>\n    <div class=\"welcome-item\"><p-badge value=\"3\"></p-badge> Edit some elements in the <i class=\"pi pi-pencil\" style=\"font-size: 1.1rem\">&nbsp;Editor</i></div>\n    <div class=\"welcome-item\"><p-badge value=\"4\"></p-badge> And watch the Previewer acting accordingly <img src=\"assets/images/preview-ui-tab.png\" /></div>\n    <div class=\"welcome-item\"><p-badge value=\"5\"></p-badge> You can save your work by selecting <i class=\"pi pi-home\" style=\"font-size: 1.1rem\">&nbsp;Projects</i> on the side bar.</div>\n    <div class=\"welcome-item\"><p-badge value=\"6\"></p-badge> And select <p-button icon=\"pi pi-save\" label=\"Save\"></p-button> button.</div>\n  </p-card>\n</div>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {WelcomeComponent} from './main/welcome.component';\nimport {ButtonModule} from \"primeng/button\";\nimport {CardModule} from \"primeng/card\";\nimport {BadgeModule} from \"primeng/badge\";\n\n\n@NgModule({\n  declarations: [WelcomeComponent],\n    imports: [\n        CommonModule, ButtonModule, CardModule, BadgeModule\n    ]\n})\nexport class WelcomeModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ChangeModule { }\n","import { Injectable } from '@angular/core';\nimport { ChangeUpdateService } from './change-update.service';\nimport { BroadcastChannel } from 'broadcast-channel';\nimport {Change, ChangeType, DontCodeChangeManager, dtcde} from '@dontcode/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport {DontCodeModelManager} from \"@dontcode/core\";\n\n/**\n * List to all the changes on the edited elements from the BroadCastChannel and updates\n * a list of changes from it.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeListenService {\n\n  protected channel: BroadcastChannel<Change>;\n  protected listOfChanges: Change[]=[];\n\n  protected changeEmitter = new ReplaySubject<Change> ();\n\n  constructor(protected changeMgr:DontCodeChangeManager) {\n    this.channel = new BroadcastChannel(ChangeUpdateService.CHANNEL_CHANGE_NAME);\n    console.log('Channel receiver created');\n    this.channel.onmessage = msg => {\n      if( msg.type===ChangeType.RESET) {\n        this.listOfChanges.length=0;\n      } else {\n        this.listOfChanges.push(msg);\n      }\n      this.changeEmitter.next(msg);\n      if (msg.type===ChangeType.RESET)\n        this.resetEmitter ();\n    };\n    this.changeEmitter.subscribe({\n      next: change => {\n        this.changeMgr.pushChange(change);\n      }\n    })\n\n\n  }\n\n  resetEmitter () {\n    const newReplay = new ReplaySubject<Change>();\n    newReplay.observers=this.changeEmitter.observers;\n    this.changeEmitter=newReplay;\n  }\n\n  getListOfChanges (): Change[] {\n    return this.listOfChanges;\n  }\n\n  getChangeEvents (): Observable<Change> {\n    return this.changeEmitter;\n  }\n\n}\n","import {Injectable} from \"@angular/core\";\nimport {Change, ChangeType, Message, MessageType} from \"@dontcode/core\";\nimport {BroadcastChannel} from \"broadcast-channel\";\nimport {webSocket, WebSocketSubject, WebSocketSubjectConfig} from \"rxjs/webSocket\";\n\nimport {environment} from \"../../../../environments/environment\";\nimport {Observable, ReplaySubject} from \"rxjs\";\n\n/**\n * Updates all changes to the edited elements (what the user entered in the IDE)\n * to a broadcastchannel (for dev tab) and the websocket to the services.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangeUpdateService {\n\n  public static readonly CHANNEL_CHANGE_NAME='ide-ui-changes';\n  protected listOfChanges: Change[]=[];\n  protected channel: BroadcastChannel<Change>;\n\n  protected ideServicesWebSocket: WebSocketSubject<Message>|null=null;\n  protected connectionStatus: ReplaySubject<string>=new ReplaySubject<string>(1);\n\n  /**\n   * The Id of the session as returned by the services. This is used to tell the previewer to listen only to this session\n   * @protected\n   */\n  protected sessionIdSubject = new ReplaySubject<string|undefined>(1);\n  protected sessionId?:string;\n\n  constructor() {\n    console.debug('Creating channel');\n    this.channel = new BroadcastChannel(ChangeUpdateService.CHANNEL_CHANGE_NAME);\n  }\n\n  protected openWebSocket (): Promise<WebSocketSubject<Message>> {\n    if (this.ideServicesWebSocket) {\n      if ((!this.ideServicesWebSocket.isStopped) && (!this.ideServicesWebSocket.closed)) {\n        return Promise.resolve(this.ideServicesWebSocket);\n      }\n    }\n    const ret = new Promise<WebSocketSubject<Message>>((resolve, reject) => {\n      const config: WebSocketSubjectConfig<any> = {\n        url: environment.webSocketUrl,\n        closeObserver: {\n          next: value => {\n            console.debug(\"Close\", value);\n\n          }\n        },\n        openObserver: {\n          next: value => {\n            if (this.ideServicesWebSocket)\n              resolve(this.ideServicesWebSocket);\n            else\n              reject('No WebSocket');\n          },\n          error: err => {\n            console.error(\"error connecting socket\", err);\n            reject(err);\n          }\n        }\n      }\n\n      this.ideServicesWebSocket = webSocket(config);\n      this.connectionStatus.next(\"connected\");\n      this.sessionIdSubject.next(undefined);\n      this.ideServicesWebSocket.asObservable().subscribe({\n        next: msg => {\n\n          //console.log('message received: ' , msg);\n          const newId=msg?.sessionId;\n          if ((newId) && (newId !== this.sessionId)){\n            console.debug('Received SessionId ', newId);\n            this.sessionId=newId;\n            this.sessionIdSubject.next(newId);\n          }\n        },\n        // Called whenever there is a message from the server\n        error: err => {\n          console.error(err);\n          this.ideServicesWebSocket?.unsubscribe();\n          this.ideServicesWebSocket = null;\n          this.connectionStatus.next(\"ERROR:\" + err);\n          this.sessionIdSubject.next(undefined);\n        },\n        // Called if WebSocket API signals some kind of error\n        complete: () => {\n          console.debug('complete');\n          this.ideServicesWebSocket?.unsubscribe();\n          this.ideServicesWebSocket = null;\n          this.connectionStatus.next(\"closed\");\n          this.sessionIdSubject.next(undefined);\n        }\n        // Called when connection is closed (for whatever reason)\n      });\n    });\n    return ret;\n  }\n\n  pushChange (newChange:Change): void {\n    //console.log('Change pushed');\n    if( newChange.type===ChangeType.RESET) {\n      this.listOfChanges.length=0;\n    } else {\n      this.listOfChanges.push(newChange);\n    }\n    this.channel.postMessage(newChange);\n    this.updateSocket(new Message (MessageType.CHANGE, this.sessionId, newChange));\n  }\n\n  async updateSocket (newChange:Message) {\n    this.openWebSocket().then (socket => socket.next(newChange));\n  }\n\n  getListOfChanges (): Change[] {\n    return this.listOfChanges;\n  }\n\n  getConnectionStatus (): Observable<string> {\n    return this.connectionStatus;\n  }\n  getSessionId (): Observable<string|undefined> {\n    return this.sessionIdSubject;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocaleService } from '../text/services/locale.service';\n\n@Pipe({\n  name: 'localeDesc'\n})\nexport class LocaleDescPipe implements PipeTransform {\n\n  constructor(protected locale:LocaleService) {\n  }\n\n  transform(value: string, ...args: unknown[]): unknown {\n    return this.locale.toText(value+'-desc');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { LocaleService } from '../text/services/locale.service';\n\n@Pipe({\n  name: 'locale'\n})\nexport class LocalePipe implements PipeTransform {\n\n  constructor(protected locale:LocaleService) {\n  }\n\n  transform(value: string, ...args: unknown[]): unknown {\n    return this.locale.toText(value);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'typeOf'\n})\nexport class TypeOfPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    if (Array.isArray(value))\n      return 'array';\n    else\n      return typeof value;\n  }\n\n}\n","import { DontCodeProject } from '@dontcode/core';\n\nexport class IdeProject extends DontCodeProject {\n  _id:any;\n  current?: boolean;\n  content: any;\n}\n","import {Injectable} from '@angular/core';\nimport {firstValueFrom, Observable, of} from \"rxjs\";\nimport {IdeProject} from \"../IdeProject\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../../../environments/environment\";\nimport {map} from \"rxjs/operators\";\nimport {Change, ChangeType, dtcde} from \"@dontcode/core\";\nimport {ChangeUpdateService} from \"../../change/services/change-update.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  projects: Array<IdeProject> = [];\n\n  protected currentProject: IdeProject;\n  constructor(protected http: HttpClient) {\n    this.currentProject=new IdeProject();\n    this.currentProject.template=false;\n    this.currentProject.current = true;\n  }\n\n  loadListOfProjects () :Observable<Array<IdeProject>> {\n//    if (this.projects.length===0) {\n      return this.http.get<Array<IdeProject>>(environment.projectUrl).pipe(\n        map(newProjects => {\n          this.projects=this.placeCurrentProject(newProjects);\n          return this.projects;\n        }));\n  /*  } else {\n      return of(this.projects);\n    }*/\n  }\n\n  placeCurrentProject (projects:Array<IdeProject>) {\n    // Keep the currentProject at first place in the list\n    const found = projects.findIndex(value => {\n      return value._id === this.currentProject._id;\n    });\n    if( found === -1) {\n      projects=[this.currentProject, ...projects];\n    } else {\n      projects.splice(found, 1);\n      projects=[this.currentProject, ...projects];\n    }\n    return projects;\n\n  }\n\n  saveCurrentProject (): Promise<IdeProject> {\n    const toSave = {...this.currentProject};\n    delete toSave.current;  // We don't want to save the fact it's the current project\n\n    const model = dtcde.getModelManager().getContent();\n    toSave.content = model;\n    if( toSave._id) {\n      return firstValueFrom(this.http.put<IdeProject>(environment.projectUrl+'/'+this.currentProject.name, toSave, {responseType:\"json\"} ).pipe(\n        map (value => {\n        delete value.content;\n        return value;\n      }))\n      );\n    } else {\n      return firstValueFrom(this.http.post<IdeProject>(environment.projectUrl, toSave, {responseType:\"json\"} ).pipe (\n        map (value => {\n          this.currentProject._id=value._id;\n          return this.currentProject;\n        }))\n      );\n    }\n\n  }\n\n  loadProject (prj:IdeProject): Promise<IdeProject> {\n    if( prj.name) {\n      return firstValueFrom(this.http.get<IdeProject>(environment.projectUrl + '/' + prj.name, {responseType: 'json'}));\n    } else {\n      return Promise.resolve(prj);\n    }\n  }\n\n  /**\n   * Creates a new empty project and sets it as current project\n   */\n  newCurrentProject (): IdeProject {\n    this.setCurrentProject(new IdeProject());\n    return this.currentProject;\n  }\n\n  setCurrentProject (prj:IdeProject): void {\n    if( this.currentProject?.current) {\n      delete this.currentProject.current;\n    }\n    this.currentProject=prj;\n    this.currentProject.current = true;\n    this.projects = this.placeCurrentProject(this.projects);\n  }\n\n  loadAndSetCurrentProject (prj:IdeProject, updateService: ChangeUpdateService) : Promise<IdeProject>{\n   // console.log(\"Loading Project\");\n    return this.loadProject(prj).then (value => {\n     // console.log(\"Setting current Project\");\n      this.setCurrentProject(value);\n      // console.log(\"Pushing update\");\n      updateService.pushChange(new Change(ChangeType.RESET, '', value.content));\n      // console.log(\"Loading Project done\");\n      return value;\n    })\n\n  }\n\n  getCurrentProject (): IdeProject {\n    return this.currentProject;\n  }\n\n  isCurrentProject (prj:IdeProject): boolean {\n    if (prj.current)  return prj.current;\n    else\n      return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TypeOfPipe } from './pipes/type-of.pipe';\nimport { TextModule } from './text/text.module';\nimport { LocalePipe } from './pipes/locale.pipe';\nimport { LocaleDescPipe } from './pipes/locale-desc.pipe';\nimport { ChangeModule } from './change/change.module';\n\n@NgModule({\n    declarations: [TypeOfPipe, LocalePipe, LocaleDescPipe],\n  exports: [\n    TypeOfPipe,\n    LocalePipe,\n    LocaleDescPipe\n  ],\n    imports: [\n        CommonModule,\n        TextModule,\n      ChangeModule\n    ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { DontCodeModel } from '@dontcode/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaleService {\n  texts = new Map<string, string> ([\n    [DontCodeModel.ROOT, 'I want to create'],\n    [DontCodeModel.APP_TYPE, 'I want to create a'],\n    [DontCodeModel.APP_NAME, 'with the name'],\n    [DontCodeModel.APP_NAME+'-desc', 'Enter the name'],\n    [DontCodeModel.APP_ENTITIES, 'handing the following items:'],\n    [DontCodeModel.APP_ENTITIES+'-desc', 'List of managed items'],\n    [DontCodeModel.APP_ENTITIES_FROM, 'An item from'],\n    [DontCodeModel.APP_ENTITIES_FROM+'-desc', 'Predefined items'],\n    [DontCodeModel.APP_ENTITIES_NAME, 'with the name'],\n    [DontCodeModel.APP_ENTITIES_NAME+'-desc', 'Name of item'],\n    [DontCodeModel.APP_FIELDS, 'containing the following fields:'],\n    [DontCodeModel.APP_FIELDS+'-desc', 'List of fields'],\n    [DontCodeModel.APP_FIELDS_NAME, 'A field named'],\n    [DontCodeModel.APP_FIELDS_NAME+'-desc', 'Name of field'],\n    [DontCodeModel.APP_FIELDS_TYPE, 'with the type'],\n    [DontCodeModel.APP_FIELDS_TYPE+'-desc', 'Type of field'],\n    [DontCodeModel.APP_REPORTS, 'It will display reports:'],\n    [DontCodeModel.APP_REPORTS+'-desc', 'Design the reports you want to use'],\n    [DontCodeModel.APP_REPORTS_TITLE, 'One named'],\n    [DontCodeModel.APP_REPORTS_TITLE+'-desc', 'The title of the report'],\n    [DontCodeModel.APP_REPORTS_FOR, 'for the item'],\n    [DontCodeModel.APP_REPORTS_FOR+'-desc', 'Name of the item to generate the report for'],\n    [DontCodeModel.APP_REPORTS_GROUP, 'Values must be grouped'],\n    [DontCodeModel.APP_REPORTS_GROUP+'-desc', 'Select if and how a grouping of values will be done'],\n    [DontCodeModel.APP_REPORTS_GROUP_OF, 'on'],\n    [DontCodeModel.APP_REPORTS_GROUP_OF+'-desc', 'The field or the type of field to use for grouping'],\n    [DontCodeModel.APP_REPORTS_GROUP_SHOW, 'show'],\n    [DontCodeModel.APP_REPORTS_GROUP_SHOW+'-desc', 'if grouping on a type of field, which one to show ?'],\n    [DontCodeModel.APP_REPORTS_GROUP_LABEL, 'with the label'],\n    [DontCodeModel.APP_REPORTS_GROUP_LABEL+'-desc', 'The title of the group to display'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE, 'and the group must display'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE+'-desc', 'What result to be displayed for each group ?'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_OPERATION, 'the'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_OPERATION+'-desc', 'Operation to display on the elements'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_OF, 'of'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_OF+'-desc', 'What field will be displayed ?'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_LABEL, 'labelled as'],\n    [DontCodeModel.APP_REPORTS_GROUP_AGGREGATE_LABEL+'-desc', 'The label of the field aggregation'],\n    [DontCodeModel.APP_REPORTS_SORT, 'Please sort the values'],\n    [DontCodeModel.APP_REPORTS_SORT+'-desc', 'Specify how the values will be sorted'],\n    [DontCodeModel.APP_REPORTS_SORT_BY, 'according to'],\n    [DontCodeModel.APP_REPORTS_SORT_BY+'-desc', 'The field you want to sort'],\n    [DontCodeModel.APP_REPORTS_SORT_DIRECTION, 'order'],\n    [DontCodeModel.APP_REPORTS_SORT_DIRECTION+'-desc', 'Highest ranking or Lowest ranking first ?'],\n    [DontCodeModel.APP_REPORTS_DISPLAY, 'The report displays'],\n    [DontCodeModel.APP_REPORTS_DISPLAY+'-desc', 'what must be displayed'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_TYPE, 'a'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_TYPE+'-desc', 'the graph or table you want displayed'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_OF, 'of'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_OF+'-desc', 'the field to display. Empty for all'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_BY, 'by'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_BY+'-desc', 'the field to display. Empty for all'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_TITLE, 'with the title'],\n    [DontCodeModel.APP_REPORTS_DISPLAY_TITLE+'-desc', 'Enter the title of the graph or table displayed'],\n    [DontCodeModel.APP_SHARING, 'Information will be shared '],\n    [DontCodeModel.APP_SHARING+'-desc', 'List of screens'],\n    [DontCodeModel.APP_SHARING_WITH, 'with'],\n    [DontCodeModel.APP_SHARING_WITH+'-desc', 'Persons to information will be visible to.'],\n    [DontCodeModel.APP_SOURCES, 'Data will come from:'],\n    [DontCodeModel.APP_SOURCES+'-desc', 'Source of data'],\n    [DontCodeModel.APP_SOURCES_NAME, 'A source named'],\n    [DontCodeModel.APP_SOURCES_NAME+'-desc', 'Sets a name for the data source'],\n    [DontCodeModel.APP_SOURCES_TYPE, 'of type'],\n    [DontCodeModel.APP_SOURCES_TYPE+'-desc', 'How to connect to the source'],\n    [DontCodeModel.APP_SOURCES_URL, 'with the url'],\n    [DontCodeModel.APP_SOURCES_URL+'-desc', 'The url to call the service'],\n    [DontCodeModel.APP_SCREENS, 'Showing the screens'],\n    [DontCodeModel.APP_SCREENS+'-desc', 'List of screens'],\n    [DontCodeModel.APP_SCREENS_NAME, 'A screen with the name'],\n    [DontCodeModel.APP_SCREENS_NAME+'-desc', 'Name of screen'],\n    [DontCodeModel.APP_SCREENS_LAYOUT, 'and the layout'],\n    [DontCodeModel.APP_SCREENS_LAYOUT+'-desc', 'layout of the screen'],\n    [DontCodeModel.APP_COMPONENTS, 'displaying parts:'],\n    [DontCodeModel.APP_COMPONENTS+'-desc', 'List of parts'],\n    [DontCodeModel.APP_COMPONENTS_TYPE, 'A part with the type'],\n    [DontCodeModel.APP_COMPONENTS_TYPE+'-desc', 'Type of part'],\n    [DontCodeModel.APP_COMPONENTS_ENTITY, 'handling the entity'],\n    [DontCodeModel.APP_COMPONENTS_ENTITY+'-desc', 'Entity\\'s name'],\n    // Find a way for plugins to dynamically inserts label texts\n    [DontCodeModel.APP_SCREENS+'/type', 'of type'],\n    [DontCodeModel.APP_SCREENS+'/type-desc', 'Type of screen'],\n    [DontCodeModel.APP_SCREENS+'/entity', 'handling the entity'],\n    [DontCodeModel.APP_SCREENS+'/entity-desc', 'Entity\\'s name']\n  ]);\n\n  constructor() {\n    //\n  }\n\n  toText (context:string, element?:string): string {\n    let ret:string|undefined;\n    if (element) {\n      ret = this.texts.get(context+'/'+element);\n      if (!ret) {\n        ret = context+'/'+element;\n      }\n    }else {\n      ret = this.texts.get(context);\n      if (!ret)\n        ret = context;\n    }\n    return ret;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Change, ChangeType, DontCodeModel, DontCodeSchemaItem, AbstractSchemaItem } from \"@dontcode/core\";\nimport { EditorElement, EditorElementType } from \"../../../routes/editor/editor-element\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ChangeUpdateService } from \"../../change/services/change-update.service\";\n\n/**\n  Manages the model to be edited and as well the list of elements that informs the UI about what to display.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  protected jsonSchema:DontCodeSchemaItem|null=null;\n\n  protected rootElement:EditorElement|null=null;\n\n  /**\n   * Stores the SchemaItem corresponding to a position in the schema\n   * For example:\n   *  'creation/entities' => The SchemaItem describing an entity\n   *  'creation/entities/fields/' => The SchemaItem describing a field in an entity\n   *  'creation/screens[type=list]/columns' => The SchemaItem describing a column of a screen when the screen type is list\n   */\n  //mapOfJson = new Map<string, DontCodeSchemaItem>();\n\n  constructor(protected http:HttpClient) {\n\n  }\n\n\n  resetSchema () {\n    this.rootElement=null;\n    //this.mapOfJson.clear();\n    //this.updateService.pushChange(new Change(ChangeType.RESET, DontCodeModel.ROOT,null));\n  }\n\n  /**\n   * Read the schema to integrate it in the list\n   * @param schemaAsJson\n   */\n  readSchema (schemaAsJson:DontCodeSchemaItem) {\n    this.jsonSchema = schemaAsJson;\n    const rootSchema= AbstractSchemaItem.goto(schemaAsJson, DontCodeModel.ROOT);\n    if( rootSchema) {\n      this.rootElement = EditorElement.createNew(\n        DontCodeModel.ROOT, DontCodeModel.ROOT,\n        EditorElementType.label, rootSchema);\n    }\n  }\n\n  getRootElement (): EditorElement {\n    if (!this.rootElement) throw new Error('No root elements to return');\n    return this.rootElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class TextModule { }\n","export const environment = {\n  production: false,\n  webSocketUrl: 'wss://test.dont-code.net/ide?clientType=dev',\n  previewUrl: 'https://dont-code.net/preview-ui/next',\n  projectUrl: 'https://test.dont-code.net/demo_project'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["i0","AppComponent","constructor","mainTab","window","location","hash","indexOf","selectors","decls","vars","consts","template","BrowserModule","BrowserAnimationsModule","LayoutModule","EditorModule","RouterModule","MainEditorComponent","HttpClientModule","ListChangesComponent","DevModule","WelcomeModule","WelcomeComponent","BasicModule","ScreenModule","FieldsModule","ConfirmationService","RestModule","PluginCommonModule","ReportModule","CommerceModule","appRoutes","path","component","loadChildren","then","m","ProjectModule","AppModule","bootstrap","imports","forRoot","enableTracing","useHash","declarations","CommonModule","MainComponent","MenuModule","ButtonModule","ToolbarModule","SidebarModule","MenuComponent","TooltipModule","OverlayPanelModule","exports","ChangeDetectorRef","combineLatest","map","TextService","ChangeUpdateService","environment","Change","ChangeType","DontCodeModel","dtcde","ProjectService","service","updateService","projectService","ref","webSocketUrl","ngOnInit","sidePanelVisible","context$","getConnectionStatus","getSessionId","pipe","status","sessionId","loadSchema","logoClicked","sidePanelVisibleChanged","$event","target","visible","resetSchema","readSchema","getSchemaManager","getSchema","pushChange","RESET","ROOT","newCurrentProject","detectChanges","openDevUrl","open","openPreview","previewUrl","connectedClass","ctx","Array","label","items","icon","routerLink","TableModule","ChangeListenService","changeService","listOfChanges","getListOfChanges","getChangeEvents","subscribe","value","type","inputs","title","AbstractSchemaItem","DontCodeModelManager","DontCodeSchemaRef","EditorElement","id","schemaItem","position","schemaPosition","Map","schemaModel","split","join","createNew","listValues","initialValue","asArray","ret","values","editedValue","getParent","parent","setParent","newParent","isAsArray","isHidden","isReadonly","getItemIdIfExists","EditorElementType","array","substring","lastIndexOf","getChildrenToDisplay","forceRead","childrenToDisplay","length","readSubSchema","undefined","isObject","isArray","model","mergeStartPosition","mergePosition","cache","allChildren","children","itemKey","hasOwnProperty","push","getNextId","childModel","getChildren","propKey","forEach","resolveRefs","propName","child","childPosition","schemaChildPosition","newElement","get","isValue","input","isEnum","asEnum","list","getValues","object","console","error","setEditedValue","mergeElement","hasActiveProperties","toAddProps","getActiveProperties","propValue","getRelativeId","isReplacementActive","entity","isReference","toFind","getReference","found","goto","calculateRootSchema","childrenKeys","Set","keys","generateNextKey","addSubElement","removeElement","item","index","parentList","splice","upElement","downElement","getEditedValue","newVal","oldValue","props","getProperties","oldProp","delete","isReplace","after","key","i","Error","set","foundAt","alreadyThere","getChild","getChildInHierarchy","beforeAName","propNames","current","ArrayAction","TextHandlerComponent","TextElementComponent","SelectElementComponent","SharedModule","InputElementComponent","SubTextElementComponent","AccordionModule","DropdownModule","InputTextModule","FormsModule","AutoCompleteModule","onChange","event","element","UPDATE","Subscription","changeListener","textService","unsubscriber","add","change","rootElement","getRootElement","creation","markForCheck","ngOnDestroy","unsubscribe","EventEmitter","calculateOptionValue","option","changed","refresh","emit","filterGroupedElements","filteredGroups","defaultGroup","selectItem","selectedCount","query","toLowerCase","optgroup","getLabel","filter","getValue","filteredElements","outputs","SimpleChanges","addElement","removed","DELETE","oldPos","nextElement","nextKey","MOVE","ngOnChanges","changes","features","listOfElements","styles","CardModule","BadgeModule","ChangeModule","BroadcastChannel","DontCodeChangeManager","ReplaySubject","changeMgr","channel","CHANNEL_CHANGE_NAME","log","onmessage","msg","changeEmitter","next","resetEmitter","newReplay","observers","factory","providedIn","Message","MessageType","webSocket","debug","openWebSocket","ideServicesWebSocket","isStopped","closed","Promise","resolve","reject","config","url","closeObserver","openObserver","err","connectionStatus","sessionIdSubject","asObservable","newId","complete","newChange","postMessage","updateSocket","CHANGE","socket","LocaleService","LocaleDescPipe","locale","transform","args","toText","pure","LocalePipe","TypeOfPipe","DontCodeProject","IdeProject","firstValueFrom","Observable","HttpClient","http","currentProject","loadListOfProjects","projectUrl","newProjects","projects","placeCurrentProject","findIndex","_id","saveCurrentProject","toSave","getModelManager","getContent","content","put","name","responseType","post","loadProject","prj","setCurrentProject","loadAndSetCurrentProject","getCurrentProject","isCurrentProject","TextModule","APP_TYPE","APP_NAME","APP_ENTITIES","APP_ENTITIES_FROM","APP_ENTITIES_NAME","APP_FIELDS","APP_FIELDS_NAME","APP_FIELDS_TYPE","APP_REPORTS","APP_REPORTS_TITLE","APP_REPORTS_FOR","APP_REPORTS_GROUP","APP_REPORTS_GROUP_OF","APP_REPORTS_GROUP_SHOW","APP_REPORTS_GROUP_LABEL","APP_REPORTS_GROUP_AGGREGATE","APP_REPORTS_GROUP_AGGREGATE_OPERATION","APP_REPORTS_GROUP_AGGREGATE_OF","APP_REPORTS_GROUP_AGGREGATE_LABEL","APP_REPORTS_SORT","APP_REPORTS_SORT_BY","APP_REPORTS_SORT_DIRECTION","APP_REPORTS_DISPLAY","APP_REPORTS_DISPLAY_TYPE","APP_REPORTS_DISPLAY_OF","APP_REPORTS_DISPLAY_BY","APP_REPORTS_DISPLAY_TITLE","APP_SHARING","APP_SHARING_WITH","APP_SOURCES","APP_SOURCES_NAME","APP_SOURCES_TYPE","APP_SOURCES_URL","APP_SCREENS","APP_SCREENS_NAME","APP_SCREENS_LAYOUT","APP_COMPONENTS","APP_COMPONENTS_TYPE","APP_COMPONENTS_ENTITY","context","texts","DontCodeSchemaItem","schemaAsJson","jsonSchema","rootSchema","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}